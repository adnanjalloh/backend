// <auto-generated />
using System;
using CCC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CCC.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220323110356_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CCC.Data.Model.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            Title = "Develpment"
                        },
                        new
                        {
                            DepartmentId = 2,
                            Title = "Hr"
                        },
                        new
                        {
                            DepartmentId = 3,
                            Title = "Sales"
                        },
                        new
                        {
                            DepartmentId = 4,
                            Title = "Support"
                        });
                });

            modelBuilder.Entity("CCC.Data.Model.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Address = "Test",
                            DepartmentId = 1,
                            Email = "Ahmed@ccc.com",
                            Name = "Ahmed"
                        },
                        new
                        {
                            EmployeeId = 2,
                            Address = "Test",
                            DepartmentId = 2,
                            Email = "Mohmmed@ccc.com",
                            Name = "Mohmmed"
                        },
                        new
                        {
                            EmployeeId = 3,
                            Address = "Test",
                            DepartmentId = 3,
                            Email = "Ali@ccc.com",
                            Name = "Ali"
                        },
                        new
                        {
                            EmployeeId = 4,
                            Address = "Test",
                            DepartmentId = 4,
                            Email = "Sanaa@ccc.com",
                            Name = "Sanaa"
                        },
                        new
                        {
                            EmployeeId = 5,
                            Address = "Test",
                            DepartmentId = 1,
                            Email = "Raghd@ccc.com",
                            Name = "Raghd"
                        },
                        new
                        {
                            EmployeeId = 6,
                            Address = "Test",
                            DepartmentId = 2,
                            Email = "Saja@ccc.com",
                            Name = "Saja"
                        },
                        new
                        {
                            EmployeeId = 7,
                            Address = "Test",
                            DepartmentId = 3,
                            Email = "Tamer@ccc.com",
                            Name = "Tamer"
                        },
                        new
                        {
                            EmployeeId = 8,
                            Address = "Test",
                            DepartmentId = 4,
                            Email = "Nasim@ccc.com",
                            Name = "Nasim"
                        },
                        new
                        {
                            EmployeeId = 9,
                            Address = "Test",
                            DepartmentId = 1,
                            Email = "Basil@ccc.com",
                            Name = "Basil"
                        },
                        new
                        {
                            EmployeeId = 10,
                            Address = "Test",
                            DepartmentId = 2,
                            Email = "Marwa@ccc.com",
                            Name = "Marwa"
                        },
                        new
                        {
                            EmployeeId = 11,
                            Address = "Test",
                            DepartmentId = 1,
                            Email = "Marwan@ccc.com",
                            Name = "Marwan"
                        });
                });

            modelBuilder.Entity("CCC.Data.Model.ExpenseClaim", b =>
                {
                    b.Property<int>("ExpenseClaimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ExpenseClaimId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("Total")
                        .HasColumnType("integer");

                    b.HasKey("ExpenseClaimId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("ExpenseClaims");
                });

            modelBuilder.Entity("CCC.Data.Model.ExpenseClaimDetail", b =>
                {
                    b.Property<int>("ExpenseClaimDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ExpenseClaimDetailId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("ExpenseClaimId")
                        .HasColumnType("integer");

                    b.Property<int>("Total")
                        .HasColumnType("integer");

                    b.HasKey("ExpenseClaimDetailId");

                    b.HasIndex("ExpenseClaimId");

                    b.ToTable("ExpenseClaimDetails");
                });

            modelBuilder.Entity("CCC.Data.Model.Leave", b =>
                {
                    b.Property<int>("LeaveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LeaveId"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("From")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("LeaveTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Note")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<DateTime>("To")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("LeaveId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LeaveTypeId");

                    b.ToTable("Leaves");

                    b.HasData(
                        new
                        {
                            LeaveId = 1,
                            EmployeeId = 1,
                            From = new DateTime(2022, 3, 22, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8180),
                            LeaveTypeId = 1,
                            Note = "Test note",
                            To = new DateTime(2022, 3, 28, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8186)
                        },
                        new
                        {
                            LeaveId = 2,
                            EmployeeId = 2,
                            From = new DateTime(2022, 3, 13, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8189),
                            LeaveTypeId = 2,
                            Note = "Test note",
                            To = new DateTime(2022, 3, 21, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8190)
                        },
                        new
                        {
                            LeaveId = 3,
                            EmployeeId = 3,
                            From = new DateTime(2022, 3, 3, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8191),
                            LeaveTypeId = 3,
                            Note = "Test note",
                            To = new DateTime(2022, 3, 18, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8192)
                        },
                        new
                        {
                            LeaveId = 4,
                            EmployeeId = 4,
                            From = new DateTime(2022, 3, 19, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8192),
                            LeaveTypeId = 4,
                            Note = "Test note",
                            To = new DateTime(2022, 3, 15, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8193)
                        },
                        new
                        {
                            LeaveId = 5,
                            EmployeeId = 5,
                            From = new DateTime(2022, 3, 22, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8194),
                            LeaveTypeId = 5,
                            Note = "Test note",
                            To = new DateTime(2022, 3, 21, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8194)
                        },
                        new
                        {
                            LeaveId = 6,
                            EmployeeId = 6,
                            From = new DateTime(2022, 3, 31, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8196),
                            LeaveTypeId = 6,
                            Note = "Test note",
                            To = new DateTime(2022, 4, 8, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8197)
                        },
                        new
                        {
                            LeaveId = 7,
                            EmployeeId = 7,
                            From = new DateTime(2022, 3, 28, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8198),
                            LeaveTypeId = 7,
                            Note = "Test note",
                            To = new DateTime(2022, 4, 7, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8198)
                        },
                        new
                        {
                            LeaveId = 8,
                            EmployeeId = 8,
                            From = new DateTime(2022, 3, 22, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8199),
                            LeaveTypeId = 8,
                            Note = "Test note",
                            To = new DateTime(2022, 3, 17, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8200)
                        },
                        new
                        {
                            LeaveId = 9,
                            EmployeeId = 1,
                            From = new DateTime(2022, 3, 20, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8200),
                            LeaveTypeId = 9,
                            Note = "Test note",
                            To = new DateTime(2022, 3, 17, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8201)
                        },
                        new
                        {
                            LeaveId = 10,
                            EmployeeId = 2,
                            From = new DateTime(2021, 12, 13, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8202),
                            LeaveTypeId = 10,
                            Note = "Test note",
                            To = new DateTime(2022, 1, 3, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8203)
                        },
                        new
                        {
                            LeaveId = 11,
                            EmployeeId = 3,
                            From = new DateTime(2022, 1, 2, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8203),
                            LeaveTypeId = 1,
                            Note = "Test note",
                            To = new DateTime(2022, 1, 28, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8204)
                        },
                        new
                        {
                            LeaveId = 12,
                            EmployeeId = 4,
                            From = new DateTime(2021, 12, 23, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8205),
                            LeaveTypeId = 2,
                            Note = "Test note",
                            To = new DateTime(2022, 1, 30, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8205)
                        },
                        new
                        {
                            LeaveId = 13,
                            EmployeeId = 5,
                            From = new DateTime(2021, 12, 27, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8206),
                            LeaveTypeId = 3,
                            Note = "Test note",
                            To = new DateTime(2022, 1, 30, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8206)
                        },
                        new
                        {
                            LeaveId = 14,
                            EmployeeId = 6,
                            From = new DateTime(2022, 3, 9, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8207),
                            LeaveTypeId = 4,
                            Note = "Test note",
                            To = new DateTime(2022, 3, 17, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8207)
                        },
                        new
                        {
                            LeaveId = 15,
                            EmployeeId = 11,
                            From = new DateTime(2021, 12, 25, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8208),
                            LeaveTypeId = 5,
                            Note = "Test note",
                            To = new DateTime(2022, 2, 7, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8208)
                        },
                        new
                        {
                            LeaveId = 16,
                            EmployeeId = 8,
                            From = new DateTime(2022, 2, 7, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8209),
                            LeaveTypeId = 6,
                            Note = "Test note",
                            To = new DateTime(2022, 3, 1, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8209)
                        },
                        new
                        {
                            LeaveId = 17,
                            EmployeeId = 9,
                            From = new DateTime(2022, 1, 30, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8210),
                            LeaveTypeId = 7,
                            Note = "Test note",
                            To = new DateTime(2022, 2, 22, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8211)
                        },
                        new
                        {
                            LeaveId = 18,
                            EmployeeId = 5,
                            From = new DateTime(2021, 10, 24, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8212),
                            LeaveTypeId = 8,
                            Note = "Test note",
                            To = new DateTime(2022, 1, 2, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8212)
                        },
                        new
                        {
                            LeaveId = 19,
                            EmployeeId = 4,
                            From = new DateTime(2021, 10, 14, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8213),
                            LeaveTypeId = 9,
                            Note = "Test note",
                            To = new DateTime(2021, 12, 13, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8214)
                        },
                        new
                        {
                            LeaveId = 20,
                            EmployeeId = 3,
                            From = new DateTime(2021, 10, 14, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8214),
                            LeaveTypeId = 10,
                            Note = "Test note",
                            To = new DateTime(2022, 1, 28, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8215)
                        },
                        new
                        {
                            LeaveId = 21,
                            EmployeeId = 2,
                            From = new DateTime(2021, 10, 14, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8216),
                            LeaveTypeId = 1,
                            Note = "Test note",
                            To = new DateTime(2022, 1, 18, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8216)
                        },
                        new
                        {
                            LeaveId = 22,
                            EmployeeId = 1,
                            From = new DateTime(2021, 10, 14, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8217),
                            LeaveTypeId = 2,
                            Note = "Test note",
                            To = new DateTime(2021, 12, 28, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8217)
                        },
                        new
                        {
                            LeaveId = 23,
                            EmployeeId = 7,
                            From = new DateTime(2021, 10, 14, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8218),
                            LeaveTypeId = 3,
                            Note = "Test note",
                            To = new DateTime(2022, 1, 29, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8218)
                        },
                        new
                        {
                            LeaveId = 24,
                            EmployeeId = 8,
                            From = new DateTime(2021, 10, 14, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8220),
                            LeaveTypeId = 4,
                            Note = "Test note",
                            To = new DateTime(2022, 3, 8, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8220)
                        },
                        new
                        {
                            LeaveId = 25,
                            EmployeeId = 10,
                            From = new DateTime(2021, 10, 14, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8221),
                            LeaveTypeId = 5,
                            Note = "Test note",
                            To = new DateTime(2022, 3, 22, 11, 3, 56, 164, DateTimeKind.Utc).AddTicks(8221)
                        });
                });

            modelBuilder.Entity("CCC.Data.Model.LeaveType", b =>
                {
                    b.Property<int>("LeaveTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LeaveTypeId"));

                    b.Property<string>("Title")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.HasKey("LeaveTypeId");

                    b.ToTable("LeaveTypes");

                    b.HasData(
                        new
                        {
                            LeaveTypeId = 1,
                            Title = "Privilege Leave"
                        },
                        new
                        {
                            LeaveTypeId = 2,
                            Title = "Earned Leave"
                        },
                        new
                        {
                            LeaveTypeId = 3,
                            Title = "Annual Leave"
                        },
                        new
                        {
                            LeaveTypeId = 4,
                            Title = "Casual Leave"
                        },
                        new
                        {
                            LeaveTypeId = 5,
                            Title = "Sick Leave"
                        },
                        new
                        {
                            LeaveTypeId = 6,
                            Title = "Maternity Leave"
                        },
                        new
                        {
                            LeaveTypeId = 7,
                            Title = "Marriage Leave"
                        },
                        new
                        {
                            LeaveTypeId = 8,
                            Title = "Paternity Leave"
                        },
                        new
                        {
                            LeaveTypeId = 9,
                            Title = "Leave Without Pay"
                        },
                        new
                        {
                            LeaveTypeId = 10,
                            Title = "Loss of Pay"
                        });
                });

            modelBuilder.Entity("CCC.Data.Model.Employee", b =>
                {
                    b.HasOne("CCC.Data.Model.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CCC.Data.Model.ExpenseClaim", b =>
                {
                    b.HasOne("CCC.Data.Model.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CCC.Data.Model.ExpenseClaimDetail", b =>
                {
                    b.HasOne("CCC.Data.Model.ExpenseClaim", "ExpenseClaim")
                        .WithMany("ExpenseClaimDetails")
                        .HasForeignKey("ExpenseClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpenseClaim");
                });

            modelBuilder.Entity("CCC.Data.Model.Leave", b =>
                {
                    b.HasOne("CCC.Data.Model.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CCC.Data.Model.LeaveType", "LeaveType")
                        .WithMany()
                        .HasForeignKey("LeaveTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("LeaveType");
                });

            modelBuilder.Entity("CCC.Data.Model.ExpenseClaim", b =>
                {
                    b.Navigation("ExpenseClaimDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
